AWSTemplateFormatVersion: '2010-09-09'
Parameters:

  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instances
    Type: AWS::EC2::KeyPair::KeyName

  NodeImageId:
    Type: AWS::EC2::Image::Id
    Description: AMI id for the node instances.

  NodeInstanceType:
    Description: EC2 instance type for the node instances
    Type: String
    Default: t2.medium
    AllowedValues:
    - t2.small
    - t2.medium
    - t2.large
    - t2.xlarge
    - t2.2xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - m5.large
    - m5.xlarge
    - m5.2xlarge
    - m5.4xlarge
    - m5.12xlarge
    - m5.24xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - c5.large
    - c5.xlarge
    - c5.2xlarge
    - c5.4xlarge
    - c5.9xlarge
    - c5.18xlarge
    - i3.large
    - i3.xlarge
    - i3.2xlarge
    - i3.4xlarge
    - i3.8xlarge
    - i3.16xlarge
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - r4.large
    - r4.xlarge
    - r4.2xlarge
    - r4.4xlarge
    - r4.8xlarge
    - r4.16xlarge
    - x1.16xlarge
    - x1.32xlarge
    - p2.xlarge
    - p2.8xlarge
    - p2.16xlarge
    - p3.2xlarge
    - p3.8xlarge
    - p3.16xlarge
    ConstraintDescription: Must be a valid EC2 instance type

  NodeAutoScalingGroupMinSize:
    Type: Number
    Description: Minimum size of Node Group ASG.
    Default: 1

  NodeAutoScalingGroupMaxSize:
    Type: Number
    Description: Maximum size of Node Group ASG.
    Default: 3

  NodeVolumeSize:
    Type: Number
    Description: Node volume size
    Default: 20

  ClusterName:
    Description: The cluster name provided when the cluster was created. If it is incorrect, nodes will not be able to join the cluster.
    Type: String

  BootstrapArguments:
    Description: Arguments to pass to the bootstrap script. See files/bootstrap.sh in https://github.com/awslabs/amazon-eks-ami
    Default: ""
    Type: String

  NodeGroupName:
    Description: Unique identifier for the Node Group.
    Type: String

  ClusterControlPlaneSecurityGroup:
    Description: The security group of the cluster control plane.
    #Type: AWS::EC2::SecurityGroup::Id
    Type: String
    Default: ""
    AllowedPattern: ".*"

  VpcId:
    Description: The VPC of the worker instances
    Type: AWS::EC2::VPC::Id

  Subnets:
    Description: The subnets where workers can be created.
    Type: List<AWS::EC2::Subnet::Id>
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "EKS Cluster"
        Parameters:
          - ClusterName
          - ClusterControlPlaneSecurityGroup
      -
        Label:
          default: "Worker Node Configuration"
        Parameters:
          - NodeGroupName
          - NodeAutoScalingGroupMinSize
          - NodeAutoScalingGroupMaxSize
          - NodeInstanceType
          - NodeImageId
          - NodeVolumeSize
          - KeyName
          - BootstrapArguments
      -
        Label:
          default: "Worker Network Configuration"
        Parameters:
          - VpcId
          - Subnets

Conditions:
  CreateClusterControlPlaneSecurityGroup: !Equals [!Ref ClusterControlPlaneSecurityGroup, ""]

Resources:
  ClusterControlPlaneSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Condition: CreateClusterControlPlaneSecurityGroup
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/cloudformation-templates-erick-vargas/EKS_EC2_ClusterControlPlaneSecurityGroup.template
      Parameters:
        CPSGVpcId: !Ref VpcId
      TimeoutInMinutes: '5'
  IAMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/cloudformation-templates-erick-vargas/EKS_IAM.template
      TimeoutInMinutes: '20'
  NodeSecurityGroupStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/cloudformation-templates-erick-vargas/EKS_EC2_NodeSecurityGroup.template
      Parameters:
        VpcId: !Ref VpcId
        ClusterName: !Ref ClusterName
        ClusterControlPlaneSecurityGroup: !GetAtt ClusterControlPlaneSecurityGroupStack.Outputs.InstanceSecurityGroupId
      TimeoutInMinutes: '20'
  AutoScalingStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/cloudformation-templates-erick-vargas/EKS_AutoScaling.template
      Parameters:
        KeyName: !Ref KeyName
        NodeImageId: !Ref NodeImageId
        NodeInstanceType: !Ref NodeInstanceType
        NodeVolumeSize: !Ref NodeVolumeSize
        NodeAutoScalingGroupMinSize: !Ref NodeAutoScalingGroupMinSize
        NodeAutoScalingGroupMaxSize: !Ref NodeAutoScalingGroupMaxSize
        ClusterName: !Ref ClusterName
        BootstrapArguments: !Ref BootstrapArguments
        NodeGroupName: !Ref NodeGroupName
        Subnets: !Join [ "," , !Ref Subnets ]
        NodeSecurityGroup: !GetAtt NodeSecurityGroupStack.Outputs.NodeSecurityGroupId
        NodeInstanceProfileArn: !GetAtt IAMStack.Outputs.NodeInstanceProfileArn
      TimeoutInMinutes: '10'
  ClusterStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://s3-us-west-2.amazonaws.com/cloudformation-templates-erick-vargas/EKS_Cluster.template
      Parameters:
        ClusterName: !Ref ClusterName
        RoleArn: !GetAtt IAMStack.Outputs.ServiceRoleForAmazonEKSArn
        NodeSecurityGroupIds: !Join [ "," , [!GetAtt NodeSecurityGroupStack.Outputs.NodeSecurityGroupId] ]
        Subnets: !Join [ "," , !Ref Subnets ]
      TimeoutInMinutes: '20'
Outputs:
  StackRef:
    Value: !Ref IAMStack
  OutputFromNestedStack:
    Value: !Ref ClusterControlPlaneSecurityGroupStack
